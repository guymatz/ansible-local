---
- include_vars: '{{ item }}'
  with_first_found:
    - files:
        - '{{ ansible_os_family }}.yml'     # Debian
        - 'default.yml'
      paths: '../vars'

- name: Check if we're at work
  command:  grep mdsol /etc/resolv.conf
  changed_when: False
  failed_when: False
  register: at_work

- name: Set work
  set_fact: at_work=True
  changed_when: False
  when: at_work

#- debug: msg='at_work {{ at_work|to_nice_json }}'

#- name: add ansible group
#  group: name=ansible state=present

# TODO: Complete when I can find the name of the
# Server based on an AWS tag
##@#- name: Set Hostname
##@#  lineinfile:
##@#    dest=/etc/sysconfig/network
##@#    line='HOSTNAME=localhost.localdomain'
##@#    regexp="^HOSTNAME=localhost.localdomain$"

# tasks file for workstation
- name: Create user gmatz
  user: name=gmatz state=present groups={{ sudo_group }}

- name: Uncomment wheel line in sudo file on RedHat
  lineinfile: "dest=/etc/sudoers state=present regexp='^%wheel.*NOPASSWD.*' line='%wheel ALL=(ALL) NOPASSWD: ALL' validate='visudo -cf %s'"
  when: ansible_os_family == 'RedHat'


- name: Uncomment wheel line in sudo file on Debian
  lineinfile: "dest=/etc/sudoers state=present regexp='%sudo   ALL=(ALL:ALL) ALL' line='%sudo ALL=(ALL) NOPASSWD: ALL' validate='visudo -cf %s'"
  when: ansible_os_family == 'Debian'

- name: Set up authorized_keys for gmatz
  authorized_key: user=gmatz
                  key="{{ item }}"
  with_file:
    - public_keys/gmatz

- name: configure ssh
  copy: src=config dest=~/.ssh/config mode=0600
  sudo_user: gmatz

- include: Debian.yml
  when: ansible_os_family in ['Debian', 'Ubuntu','Peppermint', 'Linuxmint']

- include: Redhat.yml
  when: ansible_os_family in ['RedHat', 'Fedora','Centos']

##@#- name: Install PIP packages
##@#  pip: name={{ item }} state=present
##@#  with_items: install_pip_list

- name: Install byobu launcher
  sudo_user: gmatz
  sudo: yes
  command: byobu-launcher-install
  changed_when: False

- name: Enable vi mode in .rc files
  lineinfile:
    dest=~{{ item[0] }}/{{ item[1] }}
    line="set -o vi"
    regexp="^set -o vi"
    create=yes
  with_nested:
    - [ 'root', 'gmatz' ]
    - [ '.bashrc',  '.bash_profile' ,'.profile' ]

- name: Enable byobu in .rc files
  lineinfile:
    dest=~{{ item[0] }}/{{ item[1] }}
    line="_byobu_sourced=1 . /usr/bin/byobu-launch"
    regexp="_byobu_sourced=1"
    insertafter=EOF
    create=yes
  with_nested:
    - [ 'root', 'gmatz' ]
    - [ '.bash_profile' ,'.profile' ]

- name: Enable byobu in .bashrc files
  lineinfile:
    dest=~gmatz/.bashrc
    line='{{ byobu_line }}'
    regexp="byobu-prompt"
    insertafter=EOF
    create=yes

- name: Setup up git email
  command: /usr/bin/git config --global user.email "gmatz@mdsol.com"
  sudo_user: gmatz
  changed_when: False

- name: Setup up git email
  command: /usr/bin/git config --global user.name "Guy Matz"
  sudo_user: gmatz
  changed_when: False

#- name: set common alternatives
#  alternatives: name={{ item.cmd }} path={{ item.alt }}
#  with_items: alternatives

#- name: VIM dir
#  sudo_user: gmatz
#  file: path=~/.vim state=directory recurse=yes
#        owner=gmatz group=gmatz

- include: vim.yml

- include: virtual.yml
  when: ansible_virtualization_role == 'host'
