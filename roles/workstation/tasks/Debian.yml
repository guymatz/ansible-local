---

- name: add gmatz to sudo group
  user: name='gmatz' groups='sudo' append=yes

- name: Update packages
  apt: update_cache=yes cache_valid_time=86400
  register: cache_updated

##@#- name: Add PPAs
##@#  apt_repository: repo='{{ item }}' state=present
##@#  with_items: "{{ debian_ppa_install }}"
##@#  register: debian_ppa

##@#- name: Update apt if necessary
##@#  apt: update_cache=yes
##@#  when: debian_ppa|changed

- name: Install Common packages
  apt: name={{ item }} state=present
  with_items: "{{ install_package_list }}"

- name: Check for X
  command: dpkg -s x11-common
  failed_when: False
  changed_when: False
  register: xoutput

- name: Add HipChat repo
  apt_repository: repo='deb http://downloads.hipchat.com/linux/apt stable main' state=present
  when: xoutput|success 

- name: Add HipChat repo key
  apt_key: url='https://www.hipchat.com/keys/hipchat-linux.key' state=present
  when: xoutput|success 
  register: repo_added


- name: Install Common X packages
  apt: name={{ item }} state=present
  with_items: "{{ install_x_package_list }}"
  when: xoutput|success 

- name: Install Debian X packages
  apt: name={{ item }} state=present
  with_items: "{{ debian_x_package_list }}"
  when: xoutput|success 

- name: Install highly optional Debian X packages
  apt: name={{ item }} state=present force=yes
  with_items: "{{ optional_x_package_list }}"
  failed_when: false
  when: xoutput|success 

- name: Install uniquely-named packages
  apt: name={{ item }} state=present force=yes
  with_items: "{{ debian_package_list }}"
  tags:
    - now

- name: Upgrade packages
  apt: upgrade=safe
  when: cache_updated|changed

- name: Get atom version
  uri:
    url: 'https://github.com/atom/atom/releases/latest'
  register: atom_html

- name: set fact to version number
  set_fact:
    atom_version: "{{ atom_html['url']|regex_replace('^.*/', '') }}"

- name: what's the atom version
  debug: var=atom_version

- name: Download Atom
  get_url:
    url: "https://github.com/atom/atom/releases/download/{{ atom_version }}/atom-amd64.deb"
    dest: /var/cache/apt/archives/atom-amd64.deb
  when: xoutput|success 

- name: Install Atom
  apt: deb=/var/cache/apt/archives/atom-amd64.deb
  when: xoutput|success 

- name: Get installed atom plugins
  command: apm list --json --installed --bare | jq '.user|.[]|.name'
  changed_when: false
  register: installed_atom_plugins

#- name: Install Atom Plugins
#  command: "apm install {{ item }}"
#  with_items: "{{ atom_plugins }}"
#  become: gmatz
#  when: xoutput|success and item not in installed_atom_plugins['user']['name']
#  FIX THIS WHEN

- name: set Debian alternatives
  alternatives: name={{ item.cmd }} path={{ item.alt }}
  with_items: "{{ debian_alternatives }}"

- name: set Debian X alternatives
  alternatives: name={{ item.cmd }} path={{ item.alt }}
  when: xoutput|success 
  with_items: "{{ debian_x_alternatives }}"

#- name: Add earch path to resolver
#  lineinfile: dest=/etc/resolvconf/resolv.conf.d/base regexp='^search' line='search q.rtrdc.net p.rtrdc.net prod.renttherunway.it'
#  register: resolv
#
#- name: Update resolv.conf
#  command: /sbin/resolvconf -u
#  when: resolv|changed
